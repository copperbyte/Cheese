--Super Simple Test Logical Ops

function PP(bool)
    if (bool) then
        print("T");
    else
        print("F");
    end
    return bool;
end

--[[
function cond_test()
local T = 0;
local F = 0;

local TT = true;
local FF = false;

if ((FF) or (TT)) or ((TT) and (FF)) then
   T = T + 1;
else
   F = F + 1;
end


if (TT) and (FF) and (TT) then
   T = T + 1;
else
   F = F + 1;
end

if (FF) or (FF) or (TT) then
   T = T + 1;
else
   F = F + 1;
end

print(T, F);
end

function assign_test() 
local A = "A";
local B = "B";
local N = nil;

local C = A and B;
local D = N and B;
local E = A or B;
local F = N or B;

print(C, D, E, F);
end
]]--
function call_test()
local TT = true;
local FF = false;

	PP( FF or FF or TT or FF);
	PP( TT and TT and FF and TT);

	PP( TT and TT or FF or TT and FF or TT );

	return TT and FF or TT;
end

--cond_test();
--assign_test();
call_test();

--[[
if PP(1 < 3) and PP(2 < 3) and PP(1 == 1) then
    print("and_pass_1");
else
    print("and_fail_1");
end

if PP(1 < 3) and PP(3 == 5) and PP(1 == 1) then
    print("and_pass_2");
else
    print("and_fail_2");
end


if PP(1 < 3) or PP(2 < 3) then
    print("or_pass_1");
end

if PP(1 == 3) or PP(3 == 5) then
    print("or_pass_2");
else
    print("or_fail_2");
end

]]--

